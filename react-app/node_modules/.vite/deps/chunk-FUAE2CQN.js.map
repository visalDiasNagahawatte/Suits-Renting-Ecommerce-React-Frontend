{
  "version": 3,
  "sources": ["../../react-redux/es/hooks/useSelector.js", "../../react-redux/es/hooks/useReduxContext.js", "../../react-redux/es/components/Context.js", "../../react-redux/es/utils/batch.js", "../../react-redux/es/utils/Subscription.js", "../../react-redux/es/utils/useIsomorphicLayoutEffect.js"],
  "sourcesContent": ["import { useReducer, useRef, useMemo, useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport { ReactReduxContext } from '../components/Context';\n\nvar refEquality = function refEquality(a, b) {\n  return a === b;\n};\n\nfunction useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      forceRender = _useReducer[1];\n\n  var subscription = useMemo(function () {\n    return createSubscription(store, contextSub);\n  }, [store, contextSub]);\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef();\n  var latestStoreState = useRef();\n  var latestSelectedState = useRef();\n  var storeState = store.getState();\n  var selectedState;\n\n  try {\n    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {\n      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references\n\n      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {\n        selectedState = newSelectedState;\n      } else {\n        selectedState = latestSelectedState.current;\n      }\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\" + latestSubscriptionCallbackError.current.stack + \"\\n\\n\";\n    }\n\n    throw err;\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    latestSelector.current = selector;\n    latestStoreState.current = storeState;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(function () {\n    function checkForUpdates() {\n      try {\n        var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed\n\n        if (newStoreState === latestStoreState.current) {\n          return;\n        }\n\n        var _newSelectedState = latestSelector.current(newStoreState);\n\n        if (equalityFn(_newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n\n        latestSelectedState.current = _newSelectedState;\n        latestStoreState.current = newStoreState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n\n      forceRender();\n    }\n\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.tryUnsubscribe();\n    };\n  }, [store, subscription]);\n  return selectedState;\n}\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useSelector(selector, equalityFn) {\n    if (equalityFn === void 0) {\n      equalityFn = refEquality;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(\"You must pass a selector to useSelector\");\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(\"You must pass a function as a selector to useSelector\");\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\"You must pass a function as an equality function to useSelector\");\n      }\n    }\n\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store,\n        contextSub = _useReduxContext.subscription;\n\n    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport var useSelector = /*#__PURE__*/createSelectorHook();", "import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport function useReduxContext() {\n  var contextValue = useContext(ReactReduxContext);\n\n  if (process.env.NODE_ENV !== 'production' && !contextValue) {\n    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  }\n\n  return contextValue;\n}", "import React from 'react';\nexport var ReactReduxContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;", "// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport var setBatch = function setBatch(newBatch) {\n  return batch = newBatch;\n}; // Supply a getter just to skip dealing with ESM bindings\n\nexport var getBatch = function getBatch() {\n  return batch;\n};", "import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  var batch = getBatch();\n  var first = null;\n  var last = null;\n  return {\n    clear: function clear() {\n      first = null;\n      last = null;\n    },\n    notify: function notify() {\n      batch(function () {\n        var listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n    get: function get() {\n      var listeners = [];\n      var listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n    subscribe: function subscribe(callback) {\n      var isSubscribed = true;\n      var listener = last = {\n        callback: callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n  };\n}\n\nvar nullListeners = {\n  notify: function notify() {},\n  get: function get() {\n    return [];\n  }\n};\nexport function createSubscription(store, parentSub) {\n  var unsubscribe;\n  var listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  var subscription = {\n    addNestedSub: addNestedSub,\n    notifyNestedSubs: notifyNestedSubs,\n    handleChangeWrapper: handleChangeWrapper,\n    isSubscribed: isSubscribed,\n    trySubscribe: trySubscribe,\n    tryUnsubscribe: tryUnsubscribe,\n    getListeners: function getListeners() {\n      return listeners;\n    }\n  };\n  return subscription;\n}", "import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "React", "setBatch", "getBatch", "batch", "notify", "get", "import_react", "refEquality", "useReduxContext", "useSelector"]
}
